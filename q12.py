
##The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

##1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

##Let us list the factors of the first seven triangle numbers:

	 ##1: 1
	  ##3: 1,3
	   ##6: 1,2,3,6
	   ##10: 1,2,5,10
	   ##15: 1,3,5,15
	   ##21: 1,3,7,21
	   ##28: 1,2,4,7,14,28
	   ##We can see that 28 is the first triangle number to have over five divisors.

	   ##what is the value of the first triangle number to have over five hundred divisors?

def is_prime(n):
	if n == 2:
		return true
	if n%2 == 0:
		return false
	for i in range(3, int(n**0.5)+1, 2):
		if n%i == 0:
			return false
	return true


def count_fact(n):
	mylist = []
	primelist = []
	for i in range (2, int((n**0.5))+1):
		if is_prime(i):
			while n%i == 0:
				mylist.append(i)
				n = n/i
	for x in mylist:
		if x not in primelist:
			primelist.append(x)
	factors = 1
	for x in primelist:
		factors *= (mylist.count(x) + 1)
	return factors


#now find the triangle numbers and find factors
num = fact = k = 0
while fact <= 500:
	k += 1
	num += k
	fact = count_fact(num)
print num, fact
